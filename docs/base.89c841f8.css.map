{"version":3,"sources":["styles/constraints.scss","styles/gutter.scss","styles/z-index.scss","styles/Controls.scss","styles/cage.scss","styles/mark.scss","styles/var.scss","styles/sudoku.scss","styles/cssvariables.scss","styles/base.scss"],"names":[],"mappings":"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","file":"base.89c841f8.css","sourceRoot":"../client","sourcesContent":[".constraint {\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  display: inline-block;\n  height: 1.5em;\n  position: relative;\n  vertical-align: middle;\n  width: 1.5em;\n  &[data-count]:after {\n    @apply flex justify-center items-center rounded-full absolute text--bg bg--text;\n    content: attr(data-count);\n    font-size: 0.7em;\n    height: 1.5em;\n    left: 50%;\n    top: 50%;\n    width: 1.5em;\n  }\n  &.constraint-sudoku[data-count=\"0\"]:after {\n    @apply bg-red-600;\n  }\n}\n\n.dark_mode .constraint- {\n  &sudoku, &sandwich, &arrow_sudoku, &anti_knight, &anti_king, &anti_queen {\n    filter: invert(1)\n  }\n}\n\n.constraint-sudoku {\n  background-image: url('../icons/sudoku.svg'),\n}\n\n.constraint-sandwich {\n  background-image: url('../icons/sandwich.svg'),\n}\n\n.constraint-arrow_sudoku {\n  background-image: url('../icons/arrow.svg'),\n}\n\n.constraint-killer {\n  @apply border--text;\n  background: none;\n  border: 3px dashed;\n}\n\n.constraint-anti_knight {\n  background-image: url('../icons/Chess_nlt45.svg'),\n}\n\n.constraint-anti_king {\n  background-image: url('../icons/Chess_klt45.svg'),\n}\n\n.constraint-anti_queen {\n  background-image: url('../icons/Chess_qlt45.svg'),\n}\n\n.other_constraint {\n  @apply mx-2 inline-flex items-center justify-center;\n  border: 2px solid;\n  border-radius: 100%;\n  height: 1.5em;\n  width: 1.5em;\n}\n\n.constraint-bad_render {\n  background-image: url('../icons/broken_image.png'),\n}\n\n/* these constraints use font-awesome */\n.constraint- {\n  &thermo, &no_rules, &vanilla, &new, &other {\n    height: 1em;\n    width: unset;\n    &:before {\n      font: normal normal normal 1.5em/0.6 FontAwesome;\n    }\n  }\n\n  &thermo:before {\n    content: \"\\f2c7\";\n  }\n\n  &other:before { /* \"labs\" icon */\n    @apply text-green-500;\n    content: \"\\f0c3\";\n  }\n\n  &no_rules:before {\n    @apply text-red-500;\n    content: \"\\f05e\";\n  }\n\n  &vanilla:before {\n    content: \"\\f004\";\n    display: inline-block;\n    transform: rotate(90deg);\n  }\n\n  &new:before {\n    content: \"\\f055\";\n  }\n}\n\n.solved-icon {\n  @apply text-green-500 align-middle;\n  font-size: 1.5em;\n}",".Game .gutter {\n  $thin: 11.1111111%;\n  $wide: 100%;\n  font-size: 0.6em;\n  display: flex;\n  position: absolute;\n  span {\n    @apply flex justify-center items-center;\n  }\n  &.gutter-left, &.gutter-right {\n    flex-direction: column;\n    height: $wide;\n    top: 0;\n    width: $thin;\n    span {\n      width: $wide;\n      height: $thin;\n    }\n  }\n  &.gutter-top, &.gutter-bottom {\n    height: $thin;\n    right: 0;\n    width: $wide;\n    span {\n      width: $thin;\n      height: $wide;\n    }\n  }\n  &.gutter-top {\n    bottom: 100%;\n  }\n  &.gutter-left {\n    right: 100%;\n  }\n  &.gutter-right {\n    left: 100%;\n  }\n  &.gutter-bottom {\n    top: 100%;\n  }\n}\n","/* I find it useful to keep all z-indexes together */\n.Game {\n  .colour { z-index: 0; }\n  ._canvas { z-index: 1; }\n  .cage, .hover { z-index: 4; }\n  .selected:before, .selected:after { z-index: 5; }\n  .question, .answer, .corner, .centre { z-index: 20; }\n  .to:after, .from:before { z-index: 10; }\n  .clickMask { z-index: 50; }\n  .cursor { z-index: 60; }\n  .Controls { z-index: 100; }\n  .PuzzleAdminForm { z-index: 101; }\n}\n.snackbar { z-index: 110; }\n.hoverdown { z-index: 150; }\n.modal { z-index: 200; }\n","@use 'sass:map';\n\n@import './var.scss';\n\n.Controls {\n  @apply mb-8 relative;\n  $smaller: 0.75rem;\n  $wh: 40px;\n  @for $i from 0 through 9 {\n    [data-key=\"#{$i}\"]:before {\n      content: \"#{$i}\";\n    }\n    [data-key=\"#{$i}\"].mode-colour:before {\n      content: \"\";\n      background: map.get($pallet, $i);\n    }\n  }\n  [data-key] {\n    align-items: center;\n    display: flex;\n    font-size: 1.5rem;\n    height: $wh;\n    justify-content: center;\n    padding: 0;\n    width: $wh;\n  }\n  [data-key].mode-corner:before {\n    font-size: $smaller;\n    position: relative;\n    top: -1em;\n    left: -1em;\n  }\n  [data-key].mode-centre:before {\n    font-size: $smaller;\n  }\n  [data-key].mode-colour:before {\n    display: block;\n    height: 50%;\n    width: 50%;\n  }\n}\n\n.highlight-check, .highlight-check:hover {\n  @apply bg-green-400;\n  box-shadow: 0 0 5px 3px theme('colors.yellow.300');\n}\n\n.Controls .action {\n  @apply mr-2;\n}","@import './var.scss';\n\n.board .cell .cage {\n  position: absolute;\n  height: calc(100% - var(--cage-width));\n  top: 0;\n  left: 0;\n  width: calc(100% - var(--cage-width));\n  &:before {\n    @apply border--text;\n    border: 0 dashed;\n    content: \"\";\n    display: block;\n    height: 100%;\n    width: 100%;\n  }\n  &.error:before {\n    --cage-width: 2px;\n    border-color: red;\n  }\n  &.cage-left {\n    padding-left: 2px;\n    &:before { border-left-width: $border-cage; }\n  }\n  &.cage-right {\n    padding-right: 2px;\n    &:before { border-right-width: $border-cage; }\n  }\n  &.cage-top {\n    padding-top: 2px;\n    &:before { border-top-width: $border-cage; }\n  }\n  &.cage-bottom {\n    padding-bottom: 2px;\n    &:before { border-bottom-width: $border-cage; }\n  }\n}\n\n.board .cage-first .cage-first:after {\n  @apply bg--bg;\n  content: attr(data-text);\n  font-size: 0.25em;\n  left: 0;\n  line-height: 1;\n  position: absolute;\n  top: 0;\n}\n\n.board .cage-last .cage-last:after {\n  @apply bg--bg;\n  bottom: 0;\n  content: attr(data-text);\n  position: absolute;\n  font-size: 0.25em;\n  line-height: 1;\n  right: 0;\n}\n","@use 'sass:map';\n@use 'sass:color';\n\n@import './var.scss';\n\n.board .cell .mark {\n  $wall: 7%;\n  background: repeating-linear-gradient(\n    -45deg,\n    $mark-transparent,\n    $mark-transparent 15%,\n    $mark-color 15%,\n    $mark-color 25%\n  );\n  height: 100%;\n  left: 0;\n  top: 0;\n  opacity: 0.4;\n  position: absolute;\n  width: 100%;\n  &.wall {\n    @apply border--text;\n    border: 2px solid;\n    background: $mark;\n  }\n  &.v-split {\n    height: 2 * $wall;\n    margin-top: - $wall;\n    opacity: 1;\n  }\n  &.h-split {\n    width: 2 * $wall;\n    margin-left: - $wall;\n    opacity: 1;\n  }\n  &.error {\n    background: rgba(255,0,0,0.5);\n    border-color: red;\n  }\n  /* thermo */\n  &.rounded {\n    $bulb-shrink: 15%;\n    background: $mark-color;\n    border-radius: 100%;\n    height: 100% - 2 * $bulb-shrink;\n    margin: $bulb-shrink;\n    opacity: 1;\n    width: 100% - 2 * $bulb-shrink;\n  }\n}\n","@use 'sass:map';\n@use 'sass:color';\n\n$theme_colors: text, border, bg, green, magenta, pink, red, yellow, blue, teal, orange;\n\n$pallet: (\n  0: var(--text),\n  1: var(--border),\n  2: var(--bg),\n  3: var(--green),\n  4: var(--magenta),\n  5: var(--pink),\n  6: var(--red),\n  7: var(--yellow),\n  8: var(--blue),\n  9: var(--teal),\n  \"selected\": #888,\n  \"hover\": #666,\n);\n\n$sel: 4px;\n$selected: $sel solid map.get($pallet, \"selected\");\n$darkenSelected: 5%;\n$mark: rgba(0,0,0,0.15);\n$thermo: #ddd;\n\n$border-box: var(--border-box);\n$border-cell: var(--border-cell);\n$border-cage: var(--cage-width);\n\n$mark-color: var(--mark-color);\n$mark-transparent: var(--mark-transparent);\n","@use 'sass:map';\n@use 'sass:color';\n\n@import './var.scss';\n@import './gutter.scss';\n@import './z-index.scss';\n@import './Controls.scss';\n@import './cage.scss';\n@import './mark.scss';\n\n.Game {\n  height: 100%;\n  user-select: none;\n  .game-area {\n    width: 100%;\n  }\n}\n\n.Game .play-area {\n  @apply flex overflow-hidden h-full;\n  @media (max-aspect-ratio: 1/1) {\n    flex-direction: column;\n  }\n  .Controls {\n    @apply items-center justify-center w-full;\n  }\n}\n\n.flex-cell {\n  @apply flex;\n}\n\n.board {\n  position: relative;\n  .sudoku, .clickMask {\n    display: flex;\n    flex-wrap: wrap;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n  .cell {\n    height: 11.1111%;\n    width: 11.1111%;\n  }\n  .sudoku {\n    @apply border--text;\n    border: solid;\n    border-width: 3px;\n    .cell {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n    }\n    .cell .number {\n      @apply border--text items-center justify-center flex;\n      border: solid;\n      border-width: 0 $border-cell $border-cell 0;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .cell {\n      &.x-2, &.x-5 {\n        .number {\n          border-right-width: $border-box;\n        }\n      }\n      &.y-2, &.y-5 {\n        .number {\n          border-bottom-width: $border-box;\n        }\n      }\n      &.x-8 {\n        .number {\n          border-right-width: 0;\n        }\n      }\n      &.y-8 {\n        .number {\n          border-bottom-width: 0;\n        }\n      }\n      &.selected-1:before,\n      &.selected--1:before,\n      &.selected--9:after,\n      &.selected-9:after {\n        box-sizing: content-box;\n        content: \"\";\n        left: 0;\n        margin: - $sel;\n        position: absolute;\n        top:0;\n        border: $sel solid transparent;\n        width: 100%;\n        height: 100%;\n      }\n      &.selected-1:before {\n        border-right: $selected;\n      }\n      &.selected--1:before {\n        border-left: $selected;\n      }\n      &.selected--9:after {\n        border-top: $selected;\n      }\n      &.selected-9:after {\n        border-bottom: $selected;\n      }\n    }\n  }\n}\n\n.board .cell .cursor {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 20%;\n    width: 60%;\n    height: 90%;\n    border-bottom: var(--text) 3px solid;\n}\n\n.board .cell {\n  position: relative;\n  &.selected {\n    border-color: $mark;\n    .number {\n      background-color: var(--selected);\n    }\n  }\n  .corner {\n    @apply top-0 left-0 absolute;\n    line-height: 1;\n  }\n  .colour {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    position: absolute;\n  }\n  @for $i from 0 through 9 {\n    .colour-#{$i} {\n      background: map.get($pallet, $i);\n    }\n  }\n}\n\n.board .cell {\n  &.answer,\n  .corner, .centre {\n    @apply text-blue-700;\n  }\n  &.colour-0, &.colour-6 {\n    @apply text--bg;\n    &.answer,\n    .corner, .centre {\n      @apply text--bg;\n    }\n  }\n  .corner, .centre {\n    font-size: 0.3em;\n  }\n}\n\n.board .cell {\n  $error: inset 0 0 8px red;\n  $hover: inset map.get($pallet, \"hover\") 0 0 3px 3px;\n  &.error {\n    box-shadow: $error;\n  }\n  .hover {\n    box-shadow: $hover;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n}\n\n.board .cell .arrow {\n  color: gray;\n  font-size: 0.5em;\n  position: absolute;\n  &.arrow-down {\n    bottom: -0.2em;\n  }\n  &.arrow-up {\n    top: -0.2em;\n  }\n  &.arrow-left {\n    left: -0.2em;\n  }\n  &.arrow-right {\n    right: -0.2em;\n  }\n}\n\n.board ._canvas {\n  background-size: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n","@import \"var.scss\";\n\n.theme-ctc {\n  --green: rgb(163, 224, 72);\n  --magenta: rgb(210, 59, 231);\n  --pink: rgb(235, 117, 50);\n  --red: rgb(230, 38, 31);\n  --yellow: rgb(247, 208, 56);\n  --teal: rgb(52, 187, 230);\n  --blue: rgb(64, 128, 255);\n  --orange: #EB7532; /* not useable as a colour */\n  --selected: rgba(0, 0, 0, 0.1);\n}\n\nbody {\n  --border-box: 0;\n  --border-cell: 0;\n  --cage-width: 1px;\n  &.display_cells {\n    --border-cell: 1px;\n    --border-box: 1px;\n  }\n  &.display_boxes, &.display_boxes.display_cells {\n    --border-box: 3px;\n  }\n  &.heavy_cage {\n    --cage-width: 2px;\n  }\n}\n\nbody {\n  --text: black;\n  --bg: white;\n  --border: #e2e8f0;\n  --dark-bg: #f8f8f8;\n  &.dark_mode {\n    --dark-bg: #111;\n    --bg: #222;\n    --text: #ddd;\n    --border: #444;\n  }\n}\n\n.Game {\n  --mark-transparent: rgba(255, 255, 255, 0.2);\n  --mark-color: var(--border);\n  @each $color in $theme_colors {\n    .color-#{\"\"+$color} {\n      --mark-color: var(--#{$color})\n    }\n  }\n}","@import \"sudoku.scss\";\n@import \"constraints.scss\";\n@import \"cssvariables.scss\";\n\n#react-app, body, html {\n  height: 100vh;\n}\n\nbody {\n  background: var(--border);\n  color: var(--text);\n}\n\n.navbar {\n  background: var(--dark-bg);\n}\n.app-content {\n  background: var(--bg);\n}\n\n.Game {\n  display: flex;\n  flex-direction: column;\n}\n\n#react-app {\n  max-width: 1200px;\n}\n\n.PuzzleAdminForm {\n  @apply absolute bottom-0 left-0 p-4 bg--bg;\n  .rjsf, .form-group {\n    margin-bottom: 0;\n  }\n}\n\n.hoverdown {\n  @apply relative;\n  .hoverdown--target {\n    @apply absolute right-0 hidden overflow-hidden;\n    @apply border p-4 pt-8 shadow-lg rounded bg--bg;\n    max-width: 100vw;\n    top: 100%;\n    white-space: pre;\n    width: var(--hoverdown-width);\n    .btn { border-radius: 0; }\n  }\n  &.flush .hoverdown--target {\n    padding: 0;\n  }\n  &.left .hoverdown--target {\n    left: 0;\n    right: unset;\n  }\n  &:hover .hoverdown--target {\n    display: block;\n  }\n  &.closed:hover .hoverdown--target {\n    display: none;\n  }\n  &.sm {\n    --hoverdown-width: 450px;\n  }\n  &.md {\n    --hoverdown-width: 900px;\n  }\n  &.lg {\n    --hoverdown-width: 1200px;\n  }\n  &.full .hoverdown--target {\n    height: 60vh;\n    width: 100vw;\n  }\n  iframe {\n    min-height: 60vh;\n    height: 100%;\n    width: 100%;\n  }\n  .hoverdown--links {\n    @apply text-gray-500 top-0 right-0 p-2 text-lg;\n    position: absolute;\n    a { @apply p-2 }\n    .active { @apply text--text; }\n  }\n  &.fixed .hoverdown--target {\n    position: fixed;\n    top: unset;\n  }\n  &.pinned .hoverdown--target {\n    display: block;\n    position: relative;\n  }\n}\n\n.hoverdown .hoverdown--two-columns {\n  column-count: 2;\n  column-gap: 0;\n}"]}
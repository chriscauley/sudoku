@use 'sass:map';

$pallet: (
  0: #000,
  1: #FFF,
  2: #888,
  3: #F88,
  4: #FF8,
  5: #F8F,
  6: #44F,
  7: #8FF,
  8: #8F8,
  9: #F00,
  "selected": #888,
  "hover": #666,
);

$sel: 4px;
$selected: $sel solid map.get($pallet, "selected");
$darkenSelected: 15%;

.Game {
  user-select: none;
}

.board {
  padding-top: 100%;
  position: relative;
  width: 100%;
  .sudoku, .clickMask {
    display: flex;
    flex-wrap: wrap;
    height: 100%;
    position: absolute;
    top: 0;
    width: 100%;
  }
  .cell {
    height: 11.1111%;
    width: 11.1111%;
  }
  .sudoku {
    border: solid black;
    border-width: 3px 2px 2px 3px;
    .cell {
      align-items: center;
      border: black solid;
      border-width: 0 1px 1px 0;
      display: flex;
      justify-content: center;
      &.x-2, &.x-5 {
        border-right-width: 3px;
      }
      &.y-2, &.y-5 {
        border-bottom-width: 3px;
      }
      &.selected-1:before,
      &.selected--1:before,
      &.selected--9:after,
      &.selected-9:after {
        box-sizing: content-box;
        content: "";
        left: 0;
        margin: - $sel;
        position: absolute;
        top:0;
        border: $sel solid transparent;
        width: 100%;
        height: 100%;
      }
      &.selected-1:before {
        border-right: $selected;
      }
      &.selected--1:before {
        border-left: $selected;
      }
      &.selected--9:after {
        border-top: $selected;
      }
      &.selected-9:after {
        border-bottom: $selected;
      }
    }
  }
}

.board .cell {
  background: map.get($pallet, 1);
  position: relative;
  &.selected {
    border-color: rgba(0,0,0, 0.25);
    background: darken(map.get($pallet, 1), $darkenSelected);
    z-index: 1;
  }
  .corner {
    @apply top-0 left-0 absolute;
  }
  @for $i from 0 through 9 {
    &.colour-#{$i} {
      background: map.get($pallet, $i);
      &.selected {
        background: darken(map.get($pallet, $i), $darkenSelected);
      }
    }
  }
}

.board .cell {
  &.answer,
  .corner, .centre {
    @apply text-blue-700;
  }
  &.colour-0, &.colour-6 {
    color: white;
    &.answer,
    .corner, .centre {
      @apply text-gray-400;
    }
  }
  .corner, .centre {
    font-size: 0.3em;
  }
}

.board .cell {
  $error: inset 0 0 8px red;
  $hover: inset map.get($pallet, "hover") 0 0 0 3px;
  &.error {
    box-shadow: $error;
  }
  &.hover {
    box-shadow: $hover;
  }
  &.error.hover {
    box-shadow: $error, $hover;
  }
}

.board {
  font-size: 10vw;
  @media (min-aspect-ratio: 1/1) {
    font-size: 10vh;
  }
}

.Controls {
  @apply mb-8;
  $smaller: 0.75rem;
  $wh: 40px;
  @for $i from 0 through 9 {
    [data-key="#{$i}"]:before {
      content: "#{$i}";
    }
    [data-key="#{$i}"].mode-colour:before {
      content: "";
      background: map.get($pallet, $i);
    }
  }
  [data-key] {
    align-items: center;
    display: flex;
    font-size: 1.5rem;
    height: $wh;
    justify-content: center;
    padding: 0;
    width: $wh;
  }
  [data-key].mode-corner:before {
    font-size: $smaller;
    position: relative;
    top: -1em;
    left: -1em;
  }
  [data-key].mode-centre:before {
    font-size: $smaller;
  }
  [data-key].mode-colour:before {
    display: block;
    height: 50%;
    width: 50%;
  }
}
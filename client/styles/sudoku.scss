@use 'sass:map';

$pallet: (
  0: #000,
  1: #FFF,
  2: #888,
  3: #F88,
  4: #FF8,
  5: #F8F,
  6: #44F,
  7: #8FF,
  8: #8F8,
  9: #F00,
  "selected": #888,
  "hover": #666,
);

$sel: 4px;
$selected: $sel solid map.get($pallet, "selected");
$darkenSelected: 15%;
$underlay: rgba(0,0,0, 0.15);

.Game {
  user-select: none;
}

.board {
  --box-border: 0;
  --cell-border: 0;
  .display-cells {
    --cell-border: 1px;
    --box-border: 1px;
  }
  .display-boxes, .display-boxes.display-cells {
    --box-border: 3px;
  }
  $box-border: var(--box-border);
  $cell-border: var(--cell-border);
  padding-top: 100%;
  position: relative;
  width: 100%;
  .sudoku, .clickMask {
    display: flex;
    flex-wrap: wrap;
    height: 100%;
    position: absolute;
    top: 0;
    width: 100%;
  }
  .cell {
    height: 11.1111%;
    width: 11.1111%;
  }
  .sudoku {
    border: solid black;
    border-width: 3px;
    .cell {
      align-items: center;
      border: black solid;
      border-width: 0 $cell-border $cell-border 0;
      display: flex;
      justify-content: center;
      &.x-2, &.x-5 {
        border-right-width: $box-border;
      }
      &.y-2, &.y-5 {
        border-bottom-width: $box-border;
      }
      &.x-8 {
        border-right-width: 0;
      }
      &.y-8 {
        border-bottom-width: 0;
      }
      &.selected-1:before,
      &.selected--1:before,
      &.selected--9:after,
      &.selected-9:after {
        box-sizing: content-box;
        content: "";
        left: 0;
        margin: - $sel;
        position: absolute;
        top:0;
        border: $sel solid transparent;
        width: 100%;
        height: 100%;
      }
      &.selected-1:before {
        border-right: $selected;
      }
      &.selected--1:before {
        border-left: $selected;
      }
      &.selected--9:after {
        border-top: $selected;
      }
      &.selected-9:after {
        border-bottom: $selected;
      }
    }
  }
}

.board .cell .cursor {
    display: block;
    position: absolute;
    top: 0;
    left: 20%;
    width: 60%;
    height: 90%;
    border-bottom: black 3px solid;
}

.board .cell .cage {
  --cage-width: 1px;
  $width: var(--cage-width);
  $color: black;
  position: absolute;
  height: 100%;
  top: 0;
  left: 0;
  width: 100%;
  &:before {
    border: 0 dashed $color;
    content: "";
    display: block;
    height: 100%;
    width: 100%;
  }
  &.error:before {
    --cage-width: 2px;
    border-color: red;
  }
  &.cage-left {
    padding-left: 2px;
    &:before { border-left-width: $width; }
  }
  &.cage-right {
    padding-right: 2px;
    &:before { border-right-width: $width; }
  }
  &.cage-top {
    padding-top: 2px;
    &:before { border-top-width: $width; }
  }
  &.cage-bottom {
    padding-bottom: 2px;
    &:before { border-bottom-width: $width; }
  }
}

.board .cage-first .cage-first:after {
  background: white;
  content: attr(data-text);
  font-size: 0.25em;
  left: 0;
  line-height: 1;
  position: absolute;
  top: 0;
}

.board .cage-last .cage-last:after {
  background: white;
  bottom: 0;
  content: attr(data-text);
  position: absolute;
  font-size: 0.25em;
  line-height: 1;
  right: 0;
}

.board .cell {
  background: map.get($pallet, 1);
  position: relative;
  &.selected {
    border-color: $underlay;
    background: darken(map.get($pallet, 1), $darkenSelected);
    z-index: 1;
  }
  .corner {
    @apply top-0 left-0 absolute;
    line-height: 1;
  }
  @for $i from 0 through 9 {
    &.colour-#{$i} {
      background: map.get($pallet, $i);
      &.selected {
        background: darken(map.get($pallet, $i), $darkenSelected);
      }
    }
  }
}

.board .cell {
  &.answer,
  .corner, .centre {
    @apply text-blue-700;
  }
  &.colour-0, &.colour-6 {
    color: white;
    &.answer,
    .corner, .centre {
      @apply text-gray-400;
    }
  }
  .corner, .centre {
    font-size: 0.3em;
  }
}

.board .cell {
  $error: inset 0 0 8px red;
  $hover: inset map.get($pallet, "hover") 0 0 0 3px;
  &.error {
    box-shadow: $error;
  }
  &.hover {
    box-shadow: $hover;
  }
  &.error.hover {
    box-shadow: $error, $hover;
  }
}

.board {
  font-size: 10vw;
  @media (min-aspect-ratio: 1/1) {
    font-size: 10vh;
  }
}

.Controls {
  @apply mb-8;
  $smaller: 0.75rem;
  $wh: 40px;
  @for $i from 0 through 9 {
    [data-key="#{$i}"]:before {
      content: "#{$i}";
    }
    [data-key="#{$i}"].mode-colour:before {
      content: "";
      background: map.get($pallet, $i);
    }
  }
  [data-key] {
    align-items: center;
    display: flex;
    font-size: 1.5rem;
    height: $wh;
    justify-content: center;
    padding: 0;
    width: $wh;
  }
  [data-key].mode-corner:before {
    font-size: $smaller;
    position: relative;
    top: -1em;
    left: -1em;
  }
  [data-key].mode-centre:before {
    font-size: $smaller;
  }
  [data-key].mode-colour:before {
    display: block;
    height: 50%;
    width: 50%;
  }
}

.board .cell .arrow {
  color: gray;
  font-size: 0.5em;
  position: absolute;
  &.arrow-down {
    bottom: -0.2em;
  }
  &.arrow-up {
    top: -0.2em;
  }
  &.arrow-left {
    left: -0.2em;
  }
  &.arrow-right {
    right: -0.2em;
  }
}

.board .cell .underlay {
  $wall: 7%;
  background: repeating-linear-gradient(
    -45deg,
    transparent,
    transparent 0.2em,
    $underlay 0.2em,
    $underlay 0.4em
  );
  height: 100%;
  left: 0;
  top: 0;
  position: absolute;
  width: 100%;
  &.wall {
    border: black 2px solid;
    background: $underlay;
  }
  &.v-split {
    height: 2 * $wall;
    margin-top: - $wall;
  }
  &.h-split {
    width: 2 * $wall;
    margin-left: - $wall;
  }
  &.error {
    background: rgba(255,0,0,0.5);
    border-color: red;
  }
}
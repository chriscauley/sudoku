@use 'sass:map';
@use 'sass:color';

.theme-ctc {
  --text: rgb(0, 0, 0);
  --border: rgb(207, 207, 207);
  --bg: rgb(255, 255, 255);
  --green: rgb(163, 224, 72);
  --magenta: rgb(210, 59, 231);
  --pink: rgb(235, 117, 50);
  --red: rgb(230, 38, 31);
  --yellow: rgb(247, 208, 56);
  --teal: rgb(52, 187, 230);
  --blue: rgb(64, 128, 255);
  --selected: rgba(0, 0, 0, 0.1);
}

$pallet: (
  0: var(--text),
  1: var(--border),
  2: var(--bg),
  3: var(--green),
  4: var(--magenta),
  5: var(--pink),
  6: var(--red),
  7: var(--yellow),
  8: var(--blue),
  9: var(--teal),
  "selected": #888,
  "hover": #666,
);

$sel: 4px;
$selected: $sel solid map.get($pallet, "selected");
$darkenSelected: 5%;
$mark: rgba(0,0,0,0.15);
$thermo: #ddd;

.Game {
  user-select: none;
  .game-area {
    padding: 9.999999999%;
  }
}

.Game .gutter {
  $thin: 11.1111111%;
  $wide: 100%;
  font-size: 0.6em;
  display: flex;
  position: absolute;
  span {
    @apply flex justify-center items-center;
  }
  &.gutter-left, &.gutter-right {
    flex-direction: column;
    height: $wide;
    top: 0;
    width: $thin;
    span {
      width: $wide;
      height: $thin;
    }
  }
  &.gutter-top, &.gutter-bottom {
    height: $thin;
    right: 0;
    width: $wide;
    span {
      width: $thin;
      height: $wide;
    }
  }
  &.gutter-top {
    bottom: 100%;
  }
  &.gutter-left {
    right: 100%;
  }
  &.gutter-right {
    left: 100%;
  }
  &.gutter-bottom {
    top: 100%;
  }
}


.board {
  --box-border: 0;
  --cell-border: 0;
  .display-cells {
    --cell-border: 1px;
    --box-border: 1px;
  }
  .display-boxes, .display-boxes.display-cells {
    --box-border: 3px;
  }
  $box-border: var(--box-border);
  $cell-border: var(--cell-border);
  padding-top: 100%;
  position: relative;
  width: 100%;
  .sudoku, .clickMask {
    display: flex;
    flex-wrap: wrap;
    height: 100%;
    position: absolute;
    top: 0;
    width: 100%;
  }
  .cell {
    height: 11.1111%;
    width: 11.1111%;
  }
  .sudoku {
    border: solid black;
    border-width: 3px;
    .cell {
      align-items: center;
      display: flex;
      justify-content: center;
    }
    .cell .number {
      align-items: center;
      display: flex;
      justify-content: center;

      border: black solid;
      border-width: 0 $cell-border $cell-border 0;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
    .cell {
      &.x-2, &.x-5 {
        .number {
          border-right-width: $box-border;
        }
      }
      &.y-2, &.y-5 {
        .number {
          border-bottom-width: $box-border;
        }
      }
      &.x-8 {
        .number {
          border-right-width: 0;
        }
      }
      &.y-8 {
        .number {
          border-bottom-width: 0;
        }
      }
      &.selected-1:before,
      &.selected--1:before,
      &.selected--9:after,
      &.selected-9:after {
        box-sizing: content-box;
        content: "";
        left: 0;
        margin: - $sel;
        position: absolute;
        top:0;
        border: $sel solid transparent;
        width: 100%;
        height: 100%;
      }
      &.selected-1:before {
        border-right: $selected;
      }
      &.selected--1:before {
        border-left: $selected;
      }
      &.selected--9:after {
        border-top: $selected;
      }
      &.selected-9:after {
        border-bottom: $selected;
      }
    }
  }
}

.board .cell .cursor {
    display: block;
    position: absolute;
    top: 0;
    left: 20%;
    width: 60%;
    height: 90%;
    border-bottom: black 3px solid;
}

.board .cell .cage {
  --cage-width: 2px;
  $width: var(--cage-width);
  $color: black;
  position: absolute;
  height: calc(100% - var(--cage-width));
  top: 0;
  left: 0;
  width: calc(100% - var(--cage-width));
  &:before {
    border: 0 dashed $color;
    content: "";
    display: block;
    height: 100%;
    width: 100%;
  }
  &.error:before {
    --cage-width: 2px;
    border-color: red;
  }
  &.cage-left {
    padding-left: 2px;
    &:before { border-left-width: $width; }
  }
  &.cage-right {
    padding-right: 2px;
    &:before { border-right-width: $width; }
  }
  &.cage-top {
    padding-top: 2px;
    &:before { border-top-width: $width; }
  }
  &.cage-bottom {
    padding-bottom: 2px;
    &:before { border-bottom-width: $width; }
  }
}

.board .cage-first .cage-first:after {
  background: white;
  content: attr(data-text);
  font-size: 0.25em;
  left: 0;
  line-height: 1;
  position: absolute;
  top: 0;
}

.board .cage-last .cage-last:after {
  background: white;
  bottom: 0;
  content: attr(data-text);
  position: absolute;
  font-size: 0.25em;
  line-height: 1;
  right: 0;
}

.board .cell {
  position: relative;
  &.selected {
    border-color: $mark;
    .number {
      background-color: var(--selected);
    }
  }
  .corner {
    @apply top-0 left-0 absolute;
    line-height: 1;
  }
  .colour {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    position: absolute;
  }
  @for $i from 0 through 9 {
    .colour-#{$i} {
      background: map.get($pallet, $i);
    }
  }
}

.board .cell {
  &.answer,
  .corner, .centre {
    @apply text-blue-700;
  }
  &.colour-0, &.colour-6 {
    color: white;
    &.answer,
    .corner, .centre {
      @apply text-gray-400;
    }
  }
  .corner, .centre {
    font-size: 0.3em;
  }
}

.board .cell {
  $error: inset 0 0 8px red;
  $hover: inset map.get($pallet, "hover") 0 0 0 3px;
  &.error {
    box-shadow: $error;
  }
  &.hover {
    box-shadow: $hover;
  }
  &.error.hover {
    box-shadow: $error, $hover;
  }
}

.board {
  font-size: 10vw;
  @media (min-aspect-ratio: 1/1) {
    font-size: 10vh;
  }
}

.Controls {
  @apply mb-8;
  $smaller: 0.75rem;
  $wh: 40px;
  @for $i from 0 through 9 {
    [data-key="#{$i}"]:before {
      content: "#{$i}";
    }
    [data-key="#{$i}"].mode-colour:before {
      content: "";
      background: map.get($pallet, $i);
    }
  }
  [data-key] {
    align-items: center;
    display: flex;
    font-size: 1.5rem;
    height: $wh;
    justify-content: center;
    padding: 0;
    width: $wh;
  }
  [data-key].mode-corner:before {
    font-size: $smaller;
    position: relative;
    top: -1em;
    left: -1em;
  }
  [data-key].mode-centre:before {
    font-size: $smaller;
  }
  [data-key].mode-colour:before {
    display: block;
    height: 50%;
    width: 50%;
  }
}

.board .cell .arrow {
  color: gray;
  font-size: 0.5em;
  position: absolute;
  &.arrow-down {
    bottom: -0.2em;
  }
  &.arrow-up {
    top: -0.2em;
  }
  &.arrow-left {
    left: -0.2em;
  }
  &.arrow-right {
    right: -0.2em;
  }
}

.board {
  --mark-color: rgba(0,0,0,0.5);
  .color-green {
    --mark-color: rgba(0,255,0,0.5);
  }
  .color-yellow {
    --mark-color: rgba(255,255,0,0.5);
  }
  .color-blue {
    --mark-color: rgba(0,0,255,0.5);
  }
}

.board .cell .mark {
  $wall: 7%;
  background: repeating-linear-gradient(
    -45deg,
    transparent,
    transparent 15%,
    var(--mark-color) 15%,
    var(--mark-color) 25%
  );
  height: 100%;
  left: 0;
  top: 0;
  opacity: 0.4;
  position: absolute;
  width: 100%;
  &.wall {
    border: black 2px solid;
    background: $mark;
  }
  &.v-split {
    height: 2 * $wall;
    margin-top: - $wall;
    opacity: 1;
  }
  &.h-split {
    width: 2 * $wall;
    margin-left: - $wall;
    opacity: 1;
  }
  &.error {
    background: rgba(255,0,0,0.5);
    border-color: red;
  }
  /* thermo */
  &.rounded {
    $bulb-shrink: 15%;
    background: var(--mark-color);
    border-radius: 100%;
    height: 100% - 2 * $bulb-shrink;
    margin: $bulb-shrink;
    opacity: 1;
    width: 100% - 2 * $bulb-shrink;
  }
}

.board .cell .line-thermo {
  $t: 0.25em;
  &.from:before, &.to:after {
    background: var(--mark-color);
    border-radius: $t 0 0 $t;
    content: "";
    display: block;
    height: $t;
    left: 50%;
    margin: - $t /2;
    position: absolute;
    top: 50%;
    transform-origin: $t / 2;
    width: 90%;
  }
  &.forced_end:before {
    border-left: white solid 15px;
  }

  &.to-right:after, &.from-right:before {
    transform: rotate(0deg);
  }
  &.to-downright:after, &.from-downright:before {
    transform: rotate(45deg);
  }

  &.to-down:after, &.from-down:before {
    transform: rotate(90deg);
  }
  &.to-downleft:after, &.from-downleft:before {
    transform: rotate(135deg);
  }

  &.to-left:after, &.from-left:before {
    transform: rotate(180deg);
  }
  &.to-upleft:after, &.from-upleft:before {
    transform: rotate(225deg);
  }

  &.to-up:after, &.from-up:before {
    transform: rotate(270deg);
  }
  &.to-upright:after, &.from-upright:before {
    transform: rotate(315deg);
  }
}

.line-diagonal {
  $w: 2%;
  $color: rgb(210, 59, 231);
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  &.down {
    background: repeating-linear-gradient(
      -45deg,
      transparent,
      transparent 50% - $w/2,
      $color 50% - $w/2,
      $color 50% + $w/2,
      transparent 50% + $w/2,
      transparent,
    );
  }
  &.up {
    background: repeating-linear-gradient(
      45deg,
      transparent,
      transparent 50% - $w/2,
      $color 50% - $w/2,
      $color 50% + $w/2,
      transparent 50% + $w/2,
      transparent,
    );
  }
}

.Controls {
  position: relative;
}

/* I find it useful to keep all z-indexes together */
.board .cell  {
  .colour {
    z-index: 0;
  }
  .cage {
    z-index: 4;
  }
  &.selected {
    &:before, &:after {
      z-index: 5;
    }
  }
  .question, .answer, .corner, .centre {
    z-index: 20;
  }
  .to:after, .from:before {
    z-index: 10;
  }
  .cursor {
    z-index: 110;
  }
}
.Controls {
  z-index: 100;
}
.clickMask {
  z-index: 50;
}
.board ._canvas {
  background-size: 100%;
  z-index: 1;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
